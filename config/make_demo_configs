#!/bin/bash -e

# Will perform all demos with approach shaping first, and then again without approach shaping.
# For kinova-ros setup
#arr_approach=(
#  "approach_constraint_csv: 1.,0.,0.\nshape_approach: true\n"
#  "shape_approach: false\n"
#)

arr_approach=(
  "approach_constraint_csv: 0.,-1.,0.\nshape_approach: true\n"
  "shape_approach: false\n"
)

# For each of the shaping settings, it will start with the upright end-effector constraint 
# applied only to the end so that it doesn't require the orientation from the start.
# Progresses from requiring it at the end, to requiring it all the way through, to not
# requiring it at all.
arr_upright=(
  "use_upright_orientation_constraint: false\nuse_upright_orientation_constraint_end_only: true\n"
  "use_upright_orientation_constraint: true\nuse_upright_orientation_constraint_end_only: false\n"
  "use_upright_orientation_constraint: false\nuse_upright_orientation_constraint_end_only: false\n"
)
# For each of the above combinations of settings, it first performs it without geometric
# behavioral type, then with the "around" type, and finally with the "over" type.
arr_geom_types=(
  "" 
  "behavioral_type: around\n" 
  "behavioral_type: over\n" 
)

i=1
for a in "${arr_approach[@]}"
do
  for u in "${arr_upright[@]}"
  do
    for t in "${arr_geom_types[@]}"
    do
      str="upright_constraint_direction_csv: 0.,0.,1.\n$t$u$a"
      if [[ `echo $a | grep 'shape_approach: false'` != '' ]]; then
        str="${str}pickup: true\nputdown: true\n"
      fi
      printf "$str" > demos/d_${i}.yaml
      printf "...................................................\n"
      printf "$str\n"
      ((i++))
    done
  done
done
